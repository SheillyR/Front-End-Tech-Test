{"version":3,"sources":["classes/Api/Api.module.js","classes/Api/Api.js","components/context/ShopContext.js","shared/navBar/navBar.jsx","components/productListPage/productListPage.jsx","App.js","components/cartPage/cartPage.jsx","components/productDisplayPage/productDisplayPage.service.js","components/productDisplayPage/productDisplayPage.jsx","components/context/reducers.js","components/context/GlobalState.js","routes.js","index.js"],"names":["axios","require","Api","url","this","a","get","React","createContext","product","cart","addProductToCart","removeProductFromCart","productId","NavBar","props","className","to","cartItemNumber","ProductListPage","ShopContext","Consumer","context","Fragment","reduce","count","curItem","quantity","products","map","_id","src","image","alt","name","brand","price","type","onClick","bind","App","style","textAlign","CartPage","useContext","length","cartItem","i","id","ProductDisplayPageService","match","useState","setProduct","getProducts","API","params","then","res","data","catch","err","console","log","useEffect","ProductDisplayPage","filter","item","description","ADD_PRODUCT","REMOVE_PRODUCT","shopReducer","state","action","updatedCart","updatedItemIndex","findIndex","push","updatedItem","splice","GlobalState","setData","api","response","useReducer","cartState","dispatch","Provider","value","children","createRoutes","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d70e3072.chunk.js","sourcesContent":["const axios = require('axios');\r\n\r\nexport { axios };","import { axios } from './Api.module';\r\n\r\nclass Api {\r\n  constructor(url) {\r\n    this.url = url;\r\n  }\r\n\r\n  async get() {\r\n    return axios.get(this.url);\r\n  }\r\n}\r\n\r\nexport default Api;","import React, { useEffect, useState } from 'react';\r\nimport API from '../../classes/Api/Api';\r\n\r\nexport default React.createContext({\r\n  product: [],\r\n  cart: [],\r\n\r\n  addProductToCart: product => { },\r\n  removeProductFromCart: productId => { }\r\n});\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navBar.styles.css\";\r\n\r\nconst NavBar = (props) => (\r\n  <header className=\"nav-bar\">\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <NavLink to=\"/\">Products</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/cart\">Cart ({props.cartItemNumber})</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ShopContext from \"../context/ShopContext\";\r\nimport NavBar from '../../shared/navBar/navBar';\r\nimport './productListPage.styles.css';\r\n\r\nconst ProductListPage = (props) => {\r\n  return (\r\n    <ShopContext.Consumer>\r\n      {context => (\r\n        <React.Fragment>\r\n          <NavBar\r\n            cartItemNumber={context.cart.reduce((count, curItem) => {\r\n              return count + curItem.quantity;\r\n            }, 0)}\r\n          />\r\n          <div className='container'>\r\n              {context.products.map(product => (\r\n                <div className='item'>\r\n                  <Link className='link' to={`/products/${product._id}`}>\r\n                    <div className='imageContainer'>\r\n                      <img className='imageContainer_image' src={`http://localhost:5000/${product.image}`} alt={product.name}/>\r\n                    </div>\r\n                  </Link>\r\n                  <div className='content'>\r\n                    <h2 className='content_brand'>{product.brand}</h2>\r\n                    <h2 className='content_name'>{product.name}</h2>\r\n                    <h3 className='content_price'>$ {product.price}</h3>\r\n                  </div>\r\n                  <div className='selectBtn'>\r\n                    <button \r\n                      type='button' \r\n                      className='selectBtn_addCart'\r\n                      onClick={context.addProductToCart.bind(this, product)}\r\n                      >\r\n                      Add item to cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </ShopContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;\r\n","import React from 'react'\r\nimport ProductListPage from './components/productListPage/productListPage'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  // -------------------------------------------------\r\n  // DO NOT USE THE CODE BELOW FROM LINES 8 TO 18. THIS IS\r\n  // HERE TO MAKE SURE THAT THE EXPRESS SERVER IS RUNNING\r\n  // CORRECTLY. DELETE CODE WHEN COMPLETING YOUR TEST.\r\n  // -------------------------------------------------\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }} className='App'>\r\n      <ProductListPage />\r\n      {/* Check to see if express server is running correctly */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React, { useContext } from \"react\";\r\nimport ShopContext from \"../context/ShopContext\";\r\nimport NavBar from \"../../shared/navBar/navBar\";\r\nimport \"./cartPage.styles.css\";\r\n\r\nfunction CartPage(props) {\r\n  const context = useContext(ShopContext);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar\r\n        cartItemNumber={context.cart.reduce((count, curItem) => {\r\n          return count + curItem.quantity;\r\n        }, 0)}\r\n      />\r\n      <section className=\"cart\">\r\n        {context.cart.length <= 0 && <p>No Item in the Cart!</p>}\r\n        <ul>\r\n          {context.cart.map((cartItem, i) => (\r\n            <li key={i}>\r\n              <div className='img-container'>\r\n                <img className='img' src={`http://localhost:5000/${cartItem.image}`} alt={cartItem.name} />\r\n              </div>\r\n              <div>\r\n                <strong>{cartItem.name}</strong>   ${cartItem.price} (\r\n                {cartItem.quantity})\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className=\"remove-btn\"\r\n                  onClick={context.removeProductFromCart.bind(\r\n                    this,\r\n                    cartItem.id\r\n                  )}\r\n                >\r\n                  Remove from Cart\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CartPage;","import { useState, useEffect } from 'react';\r\nimport API from '../../classes/Api/Api';\r\n\r\nconst ProductDisplayPageService = ({ match }) => {\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const getProducts = async () => {\r\n    const api = new API(`http://localhost:5000/api/products/?id=?id=${match.params.id}`);\r\n    api.get()\r\n      .then((res) => {\r\n        setProduct(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n\r\n  return {\r\n    product,\r\n  };\r\n};\r\n\r\nexport default ProductDisplayPageService;","import React from 'react';\r\nimport { ProductDisplayPageService } from './productDisplayPage.module';\r\nimport ShopContext from '../context/ShopContext';\r\nimport './productDisplayPage.styles.css';\r\nimport NavBar from '../../shared/navBar/navBar';\r\n\r\n\r\nconst ProductDisplayPage = ({ match }) => {\r\n  const { product } = ProductDisplayPageService({ match });\r\n\r\n  return(\r\n    <ShopContext.Consumer>\r\n      {context => (\r\n        <React.Fragment>\r\n          <NavBar\r\n            cartItemNumber={context.cart.reduce((count, curItem) => {\r\n              return count + curItem.quantity;\r\n            }, 0)}\r\n          />\r\n          <div>\r\n\r\n          {product.filter((item) => item._id == match.params.id).map((item) => {\r\n            return (\r\n              <div className='product-container' key={item._id}>\r\n                <div className='image-container'>\r\n                  <img className='image' src={`http://localhost:5000/${item.image}`} alt={item.name} />\r\n                </div>\r\n                <div className='info-container'>\r\n                  <div className='info'>\r\n                    <h2 className='brand'>{item.brand}</h2>\r\n                    <h2>{item.name}</h2>\r\n                    <p className='description'>{item.description}</p>\r\n                    <p className='price'>\r\n                      <strong>Price:</strong> $ {item.price}\r\n                    </p>\r\n                  </div>\r\n                  <div className='select-button'>\r\n                    <button type='button' className='selectBtn_addCart'>\r\n                      Add item to cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </ShopContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default ProductDisplayPage;","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\n\r\nconst addProductToCart = (product, state) => {\r\n  //console.log(\"adding product\", product);\r\n  const updatedCart = [...state.cart];\r\n  const updatedItemIndex = updatedCart.findIndex(\r\n    item => item._id === product.id\r\n  );\r\n\r\n  if (updatedItemIndex < 0) {\r\n    updatedCart.push({ ...product, quantity: 1 });\r\n  } else {\r\n    const updatedItem = {\r\n      ...updatedCart[updatedItemIndex]\r\n    };\r\n    updatedItem.quantity++;\r\n    updatedCart[updatedItemIndex] = updatedItem;\r\n  }\r\n\r\n  return { ...state, cart: updatedCart };\r\n};\r\n\r\nconst removeProductFromCart = (productId, state) => {\r\n  //console.log(\"remove product: \" + productId);\r\n  const updatedCart = [...state.cart];\r\n  const updatedItemIndex = updatedCart.findIndex(item => item.id === productId);\r\n\r\n  const updatedItem = {\r\n    ...updatedCart[updatedItemIndex]\r\n  };\r\n  updatedItem.quantity--;\r\n  if (updatedItem.quantity <= 0) {\r\n    updatedCart.splice(updatedItemIndex, 1);\r\n  } else {\r\n    updatedCart[updatedItemIndex] = updatedItem;\r\n  }\r\n\r\n  return { ...state, cart: updatedCart };\r\n};\r\n\r\nexport const shopReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT:\r\n      return addProductToCart(action.product, state);\r\n\r\n    case REMOVE_PRODUCT:\r\n      return removeProductFromCart(action.productId, state);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useReducer, useEffect, useState } from 'react';\r\nimport { shopReducer, ADD_PRODUCT, REMOVE_PRODUCT } from './reducers';\r\nimport ShopContext from './ShopContext';\r\nimport API from '../../classes/Api/Api';\r\n\r\nfunction GlobalState(props) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      const api = new API(`http://localhost:5000/api/products`);\r\n      const response = await api.get();\r\n      const { data } = response;\r\n      setData(data);\r\n    };\r\n    getProducts();\r\n  }, []);\r\n\r\n\r\n  const products = [...data];\r\n\r\n  const [cartState, dispatch] = useReducer(shopReducer, { cart: [] });\r\n\r\n  const addProductToCart = product => {\r\n    dispatch({ type: ADD_PRODUCT, product: product });\r\n  };\r\n\r\n  const removeProductFromCart = productId => {\r\n    dispatch({ type: REMOVE_PRODUCT, productId: productId });\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider\r\n      value={{\r\n        products: products,\r\n        cart: cartState.cart,\r\n        addProductToCart: addProductToCart,\r\n        removeProductFromCart: removeProductFromCart\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n}\r\n\r\nexport default GlobalState;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport App from './App';\r\nimport CartPage from './components/cartPage/cartPage';\r\nimport ProductDisplayPage from './components/productDisplayPage/productDisplayPage';\r\nimport GlobalState from './components/context/GlobalState';\r\nimport './App.css';\r\n\r\nconst createRoutes = (\r\n  <GlobalState>\r\n    <Router>\r\n      <Switch>\r\n        <div className='App'>\r\n          <Route exact path='/' component={App} />\r\n          <Route exact path='/products/:id' component={ProductDisplayPage} />\r\n          <Route exact path='/cart' component={CartPage} />\r\n        </div>\r\n      </Switch>\r\n    </Router >\r\n  </GlobalState>\r\n);\r\n\r\nexport default createRoutes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport createRoutes from './routes';\r\n\r\nReactDOM.render(\r\n  createRoutes,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}